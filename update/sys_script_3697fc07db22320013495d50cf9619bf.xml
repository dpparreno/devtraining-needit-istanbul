<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>true</action_delete>
        <action_insert>true</action_insert>
        <action_query>true</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>true</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_58872_needit_needit</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_58872_needit_needit">u_what_needed=other^EQ<item endquery="false" field="u_what_needed" goto="false" newquery="false" operator="=" or="false" value="other"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message><![CDATA[<p>&#34;<strong>Other</strong>&#34; field was populated with &#34;<strong>Maintenance</strong>&#34;!</p>]]></message>
        <name>Sample Business Rule</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

	// Add your code here
	gs.info("Requested for's email is:" + current.u_requested_for.email);
	gs.addInfoMessage("Requested for's employee number is " + current.u_requested_for.employee_number);
	if (gs.hasRole("admin")) {
		gs.addInfoMessage("Currently logged in user has an admin role");
	}
	
	// Count the number of records where Requested equals the current user
	var userCnt = 0;
	var userCntQry = new GlideRecord("x_58872_needit_needit");
	userCntQry.addQuery("u_requested_for", current.u_requested_for);
	//userCntQry.addQuery("u_requested_for", "Beth Anglin");
	userCntQry.query();
	while(userCntQry.next()) {
		userCnt = userCnt + 1;
	}
	gs.addInfoMessage("Total count for user is " + userCnt);
	
	// Count the total number of records
	var recCnt = 0;
	var cntQry = new GlideAggregate("x_58872_needit_needit");
	cntQry.addAggregate("COUNT");
	cntQry.query();
	if (cntQry.next()) {
		recCnt = cntQry.getAggregate("COUNT");
	}
	gs.addInfoMessage("Total count of record returned is " + recCnt);
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2017-05-10 04:33:55</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>3697fc07db22320013495d50cf9619bf</sys_id>
        <sys_mod_count>17</sys_mod_count>
        <sys_name>Sample Business Rule</sys_name>
        <sys_overrides/>
        <sys_package display_value="NeedIt" source="x_58872_needit">6ead8e780f603200cd674f8ce1050ed1</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="NeedIt">6ead8e780f603200cd674f8ce1050ed1</sys_scope>
        <sys_update_name>sys_script_3697fc07db22320013495d50cf9619bf</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2017-05-10 06:43:41</sys_updated_on>
        <template>u_other=Maintenance^EQ</template>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=3697fc07db22320013495d50cf9619bf"/>
</record_update>
